pragma circom 2.1.2;

include "./paths.circom";

template QueryVerifier() {
  signal input triples[3][3][128];
  signal output pub[1][128];
  signal output s;
  signal output o;

  component p = Path(1, 5);
  p.predicate <== [5];
  p.path <== [
    [[1], [5], [2]],
    [[2], [5], [10]],
    [[0], [0], [0]],
    [[0], [0], [0]],
    [[0], [0], [0]]
  ];
  p.length <== 2;
  p.subject === [1];
  p.object === [10];


  pub[0] <== triples[0][0];
  triples[0][1] === [0, 104, 116, 116, 112, 58, 47, 47, 120, 109, 108, 110, 115, 46, 99, 111, 109, 47, 102, 111, 97, 102, 47, 48, 46, 49, 47, 97, 103, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  pub[0] === triples[1][0];
  triples[1][1] === [0, 104, 116, 116, 112, 58, 47, 47, 120, 109, 108, 110, 115, 46, 99, 111, 109, 47, 102, 111, 97, 102, 47, 48, 46, 49, 47, 107, 110, 111, 119, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  triples[1][2] === triples[2][0];
  triples[2][1] === [0, 104, 116, 116, 112, 58, 47, 47, 120, 109, 108, 110, 115, 46, 99, 111, 109, 47, 102, 111, 97, 102, 47, 48, 46, 49, 47, 110, 97, 109, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  pub[0][0] === 0;
}
